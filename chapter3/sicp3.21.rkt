#lang planet neil/sicp
(define (make-queue)
  (cons '() '()))
(define (frontptr queue)
  (car queue))
(define (rearptr queue)
  (cdr queue))
(define (set-front queue value)
  (set-car! queue value))
(define (set-rear queue value)
  (set-cdr! queue value))
(define (empty-queue? queue)
  (null? (frontptr queue)))
(define (front-queue queue)
  (if (empty-queue? queue)
      (error "The queue is empty")
      (car (frontptr queue))))
(define (rear-queue queue)
  (car (rearptr queue)))
(define (insert-queue! queue item)
  (let ((new-pair (cons item '())))
    (if (empty-queue? queue)
        (begin
          (set-front queue new-pair)
          (set-rear queue new-pair)
          queue)
        (begin
          (set-cdr! (rearptr queue) new-pair)
          (set-rear queue new-pair)
          queue))))
(define (delete-queue! queue)
  (if (empty-queue? queue)
      (error "DELETE! called with an empty queue" queue)
      (begin
      (set-front queue (cdr (frontptr queue)))
      queue)))
(define (print-queue queue)
  (display (frontptr queue)))
;test
(define q1 (make-queue))
(insert-queue! q1 'a)
(newline)
(insert-queue! q1 'b)
(newline)
(delete-queue! q1)
(newline)
(delete-queue! q1)