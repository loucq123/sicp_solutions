#lang racket
(define (make-account balance password)
  (define (call-the-cops)
    (error "You have input wrong password too mang times"))
  (define wrong-password-times (accumulator 0))
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount)) balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch pw mes)
    (cond ((not (eq? pw password))
          (lambda (amount)
            (begin (wrong-password-times 1)
             (if (>= (wrong-password-times 0) 7)
                 (call-the-cops)
                 "Incorrect password"))))
          ((and (eq? pw password) (eq? mes 'withdraw))
           (set! wrong-password-times (accumulator 0))
           withdraw)
          ((and (eq? pw password) (eq? mes 'deposit))
           (set! wrong-password-times (accumulator 0))
           deposit)
          (else "Unknown request -- MAKE-ACCOUNT" mes)))
  dispatch)
(define (accumulator number)
  (lambda (add-number)
    (begin (set! number (+ number add-number))
           number)))
(define acc (make-account 100 'loucq))
((acc 'loucq 'withdraw) 40)
((acc 'caosr 'deposit) 50)
((acc 'caosr 'deposit) 50)
((acc 'caosr 'deposit) 50)
((acc 'caosr 'deposit) 50)
((acc 'caosr 'deposit) 50)
((acc 'caosr 'deposit) 50)
((acc 'loucq 'deposit) 50)
((acc 'caosr 'deposit) 50)
          